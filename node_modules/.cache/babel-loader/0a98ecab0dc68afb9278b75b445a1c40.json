{"ast":null,"code":"var _jsxFileName = \"E:\\\\IT\\\\WEB\\\\repository\\\\goit-react-hw-01-components\\\\src\\\\components\\\\statistics\\\\Statistics.jsx\";\nimport PropTypes from 'prop-types';\nimport css from './Statistics.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Statistics = _ref => {\n  let {\n    title,\n    stats\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: css.statistics,\n    children: [title && /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: css.title,\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: css.stat__list,\n      children: stats.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: {\n          backgroundColor: gatRandomColor()\n        },\n        className: css.item,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: css.label,\n          children: item.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: css.percentage,\n          children: [item.percentage, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n_c = Statistics;\nStatistics.propTypes = {\n  stats: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    percentage: PropTypes.number.isRequired\n  }))\n};\n\nfunction gatRandomColor() {\n  const backgroundColor = `rgb(${getRandom(0, 220)}, ${getRandom(0, 220)}, ${getRandom(0, 220)})`;\n  console.log('~ backgroundColor', backgroundColor);\n\n  function getRandom(min, max) {\n    return Math.ceil(Math.random() * (max - min) + min);\n  }\n\n  return backgroundColor;\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Statistics\");","map":{"version":3,"sources":["E:/IT/WEB/repository/goit-react-hw-01-components/src/components/statistics/Statistics.jsx"],"names":["PropTypes","css","Statistics","title","stats","statistics","stat__list","map","item","backgroundColor","gatRandomColor","label","percentage","id","propTypes","arrayOf","shape","string","isRequired","number","getRandom","console","log","min","max","Math","ceil","random"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,GAAP,MAAgB,yBAAhB;;AAEA,OAAO,MAAMC,UAAU,GAAG,QAAsB;AAAA,MAArB;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAqB;AAC9C,sBACE;AAAS,IAAA,SAAS,EAAEH,GAAG,CAACI,UAAxB;AAAA,eACGF,KAAK,iBAAI;AAAI,MAAA,SAAS,EAAEF,GAAG,CAACE,KAAnB;AAAA,gBAA2BA;AAA3B;AAAA;AAAA;AAAA;AAAA,YADZ,eAGE;AAAI,MAAA,SAAS,EAAEF,GAAG,CAACK,UAAnB;AAAA,gBACGF,KAAK,CAACG,GAAN,CAAUC,IAAI,iBACb;AACE,QAAA,KAAK,EAAE;AACLC,UAAAA,eAAe,EAAEC,cAAc;AAD1B,SADT;AAIE,QAAA,SAAS,EAAET,GAAG,CAACO,IAJjB;AAAA,gCAOE;AAAM,UAAA,SAAS,EAAEP,GAAG,CAACU,KAArB;AAAA,oBAA6BH,IAAI,CAACG;AAAlC;AAAA;AAAA;AAAA;AAAA,gBAPF,eAQE;AAAM,UAAA,SAAS,EAAEV,GAAG,CAACW,UAArB;AAAA,qBAAkCJ,IAAI,CAACI,UAAvC;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA,SAKOJ,IAAI,CAACK,EALZ;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CArBM;KAAMX,U;AAuBbA,UAAU,CAACY,SAAX,GAAuB;AACrBV,EAAAA,KAAK,EAAEJ,SAAS,CAACe,OAAV,CACLf,SAAS,CAACgB,KAAV,CAAgB;AACdH,IAAAA,EAAE,EAAEb,SAAS,CAACiB,MAAV,CAAiBC,UADP;AAEdP,IAAAA,KAAK,EAAEX,SAAS,CAACiB,MAAV,CAAiBC,UAFV;AAGdN,IAAAA,UAAU,EAAEZ,SAAS,CAACmB,MAAV,CAAiBD;AAHf,GAAhB,CADK;AADc,CAAvB;;AAUA,SAASR,cAAT,GAA0B;AACxB,QAAMD,eAAe,GAAI,OAAMW,SAAS,CAAC,CAAD,EAAI,GAAJ,CAAS,KAAIA,SAAS,CAC5D,CAD4D,EAE5D,GAF4D,CAG5D,KAAIA,SAAS,CAAC,CAAD,EAAI,GAAJ,CAAS,GAHxB;AAIAC,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCb,eAAjC;;AAEA,WAASW,SAAT,CAAmBG,GAAnB,EAAwBC,GAAxB,EAA6B;AAC3B,WAAOC,IAAI,CAACC,IAAL,CAAUD,IAAI,CAACE,MAAL,MAAiBH,GAAG,GAAGD,GAAvB,IAA8BA,GAAxC,CAAP;AACD;;AACD,SAAOd,eAAP;AACD","sourcesContent":["import PropTypes from 'prop-types';\r\nimport css from './Statistics.module.css';\r\n\r\nexport const Statistics = ({ title, stats }) => {\r\n  return (\r\n    <section className={css.statistics}>\r\n      {title && <h2 className={css.title}>{title}</h2>}\r\n\r\n      <ul className={css.stat__list}>\r\n        {stats.map(item => (\r\n          <li\r\n            style={{\r\n              backgroundColor: gatRandomColor(),\r\n            }}\r\n            className={css.item}\r\n            key={item.id}\r\n          >\r\n            <span className={css.label}>{item.label}</span>\r\n            <span className={css.percentage}>{item.percentage}%</span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      percentage: PropTypes.number.isRequired,\r\n    })\r\n  ),\r\n};\r\n\r\nfunction gatRandomColor() {\r\n  const backgroundColor = `rgb(${getRandom(0, 220)}, ${getRandom(\r\n    0,\r\n    220\r\n  )}, ${getRandom(0, 220)})`;\r\n  console.log('~ backgroundColor', backgroundColor);\r\n\r\n  function getRandom(min, max) {\r\n    return Math.ceil(Math.random() * (max - min) + min);\r\n  }\r\n  return backgroundColor;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}