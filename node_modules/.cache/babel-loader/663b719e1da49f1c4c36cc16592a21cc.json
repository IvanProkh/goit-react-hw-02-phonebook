{"ast":null,"code":"var _jsxFileName = \"E:\\\\IT\\\\WEB\\\\repository\\\\goit-react-hw-01-components\\\\src\\\\components\\\\friendList\\\\FriendList.jsx\";\nimport PropTypes from 'prop-types';\nimport css from './FriendList.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FriendList = _ref => {\n  let {\n    friends\n  } = _ref;\n  console.log(friends[0].isOnline); // let active;\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: css.friend__list,\n    children: friends.map(friend => /*#__PURE__*/_jsxDEV(\"li\", {\n      className: css.item,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: css.status,\n        style: {\n          backgroundColor: checkStatus(friend.isOnline)\n        },\n        children: friend.isOnline\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: css.avatar,\n        src: friend.avatar,\n        alt: \"User avatar\",\n        width: \"77\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: css.name,\n        children: friend.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this)]\n    }, friend.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n_c = FriendList;\n\nfunction checkStatus(isOnline) {\n  return isOnline ? 'green' : 'red';\n}\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(PropTypes.shape({\n    avatar: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    isOnline: PropTypes.bool.isRequired,\n    id: PropTypes.number.isRequired\n  }))\n}; //  {/* / {friend.status} / */}\n//  style={{ backgroundColor: 'black' }}\n// const friend = document.querySelector('.status');\n// console.log('~ friend', friend);\n// friend.addEventListener('click', findActiveFriends);\n// function findActiveFriends(evt) {\n//   if (evt.key === 'Escape') {\n//     friend.classList.add('online');\n//   } else {\n//     friend.classList.add('offline');\n//   }\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"FriendList\");","map":{"version":3,"sources":["E:/IT/WEB/repository/goit-react-hw-01-components/src/components/friendList/FriendList.jsx"],"names":["PropTypes","css","FriendList","friends","console","log","isOnline","friend__list","map","friend","item","status","backgroundColor","checkStatus","avatar","name","id","propTypes","arrayOf","shape","string","isRequired","bool","number"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,GAAP,MAAgB,yBAAhB;;AAEA,OAAO,MAAMC,UAAU,GAAG,QAAiB;AAAA,MAAhB;AAAEC,IAAAA;AAAF,GAAgB;AACzCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAO,CAAC,CAAD,CAAP,CAAWG,QAAvB,EADyC,CAEzC;;AACA,sBACE;AAAI,IAAA,SAAS,EAAEL,GAAG,CAACM,YAAnB;AAAA,cACGJ,OAAO,CAACK,GAAR,CAAYC,MAAM,iBACjB;AAAI,MAAA,SAAS,EAAER,GAAG,CAACS,IAAnB;AAAA,8BAGE;AACE,QAAA,SAAS,EAAET,GAAG,CAACU,MADjB;AAEE,QAAA,KAAK,EAAE;AAAEC,UAAAA,eAAe,EAAEC,WAAW,CAACJ,MAAM,CAACH,QAAR;AAA9B,SAFT;AAAA,kBAIGG,MAAM,CAACH;AAJV;AAAA;AAAA;AAAA;AAAA,cAHF,eASE;AACE,QAAA,SAAS,EAAEL,GAAG,CAACa,MADjB;AAEE,QAAA,GAAG,EAAEL,MAAM,CAACK,MAFd;AAGE,QAAA,GAAG,EAAC,aAHN;AAIE,QAAA,KAAK,EAAC;AAJR;AAAA;AAAA;AAAA;AAAA,cATF,eAeE;AAAG,QAAA,SAAS,EAAEb,GAAG,CAACc,IAAlB;AAAA,kBAAyBN,MAAM,CAACM;AAAhC;AAAA;AAAA;AAAA;AAAA,cAfF;AAAA,OAA8BN,MAAM,CAACO,EAArC;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD,CA1BM;KAAMd,U;;AA4Bb,SAASW,WAAT,CAAqBP,QAArB,EAA+B;AAC7B,SAAOA,QAAQ,GAAG,OAAH,GAAa,KAA5B;AACD;;AAEDJ,UAAU,CAACe,SAAX,GAAuB;AACrBd,EAAAA,OAAO,EAAEH,SAAS,CAACkB,OAAV,CACPlB,SAAS,CAACmB,KAAV,CAAgB;AACdL,IAAAA,MAAM,EAAEd,SAAS,CAACoB,MAAV,CAAiBC,UADX;AAEdN,IAAAA,IAAI,EAAEf,SAAS,CAACoB,MAAV,CAAiBC,UAFT;AAGdf,IAAAA,QAAQ,EAAEN,SAAS,CAACsB,IAAV,CAAeD,UAHX;AAIdL,IAAAA,EAAE,EAAEhB,SAAS,CAACuB,MAAV,CAAiBF;AAJP,GAAhB,CADO;AADY,CAAvB,C,CAWA;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import PropTypes from 'prop-types';\r\nimport css from './FriendList.module.css';\r\n\r\nexport const FriendList = ({ friends }) => {\r\n  console.log(friends[0].isOnline);\r\n  // let active;\r\n  return (\r\n    <ul className={css.friend__list}>\r\n      {friends.map(friend => (\r\n        <li className={css.item} key={friend.id}>\r\n          {/* {{ {friend.isOnline } && <h2 className={css.title}>{title}</h2>} && <h2 className={css.title}>{title}</h2>} */}\r\n\r\n          <span\r\n            className={css.status}\r\n            style={{ backgroundColor: checkStatus(friend.isOnline) }}\r\n          >\r\n            {friend.isOnline}\r\n          </span>\r\n          <img\r\n            className={css.avatar}\r\n            src={friend.avatar}\r\n            alt=\"User avatar\"\r\n            width=\"77\"\r\n          />\r\n          <p className={css.name}>{friend.name}</p>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nfunction checkStatus(isOnline) {\r\n  return isOnline ? 'green' : 'red';\r\n}\r\n\r\nFriendList.propTypes = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      avatar: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      isOnline: PropTypes.bool.isRequired,\r\n      id: PropTypes.number.isRequired,\r\n    })\r\n  ),\r\n};\r\n\r\n//  {/* / {friend.status} / */}\r\n\r\n//  style={{ backgroundColor: 'black' }}\r\n\r\n// const friend = document.querySelector('.status');\r\n// console.log('~ friend', friend);\r\n\r\n// friend.addEventListener('click', findActiveFriends);\r\n\r\n// function findActiveFriends(evt) {\r\n//   if (evt.key === 'Escape') {\r\n//     friend.classList.add('online');\r\n//   } else {\r\n//     friend.classList.add('offline');\r\n//   }\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}